pipeline {
    agent {
        label 'docker-capable-agent' 
    }

    environment {
        DOCKER_IMAGE_REPO = "sahilphatangare/django-devops"
        DOCKER_IMAGE_TAG = "${env.BUILD_NUMBER}"
        SWARM_MANAGER_IP = "98.91.19.249" 
        
        DOCKERHUB_USERNAME = "sahilphatangare"
        DOCKERHUB_CREDENTIAL_ID = 'dockerhub-credentials'
        
        SSH_CREDENTIAL_ID = 'swarm-ssh-key'               
    }

    stages {
        stage('Checkout Code') {
            steps {
                echo "Repository checked out successfully."
            }
        }

        stage('Build Docker Image') {
            steps {
                echo "Building Docker image: ${DOCKER_IMAGE_REPO}:${DOCKER_IMAGE_TAG}"
                
                dir('django_app') {
                    sh "docker build -t ${DOCKER_IMAGE_REPO}:${DOCKER_IMAGE_TAG} ."
                }

                sh "docker tag ${DOCKER_IMAGE_REPO}:${DOCKER_IMAGE_TAG} ${DOCKER_IMAGE_REPO}:latest"
            }
        }

        stage('Run Unit Tests') {
            steps {
                echo "Running unit tests inside the container image..."
                echo "Placeholder: Unit tests passed."
            }
        }

        stage('Push to Docker Hub') {
            steps {
                withCredentials([usernamePassword(
                    credentialsId: DOCKERHUB_CREDENTIAL_ID,
                    passwordVariable: 'DOCKER_PASSWORD',
                    usernameVariable: 'DOCKER_LOGIN_USERNAME'
                )]) {
                    sh "docker login -u ${DOCKERHUB_USERNAME} -p ${DOCKER_PASSWORD}"
                    
                    echo "Pushing ${DOCKER_IMAGE_REPO}:${DOCKER_IMAGE_TAG}..."
                    sh "docker push ${DOCKER_IMAGE_REPO}:${DOCKER_IMAGE_TAG}"
                    
                    echo "Pushing ${DOCKER_IMAGE_REPO}:latest..."
                    sh "docker push ${DOCKER_IMAGE_REPO}:latest"
                    
                    sh "docker logout"
                }
            }
        }

        stage('Deploy to Docker Swarm') {
            steps {
                withCredentials([sshUserPrivateKey(
                    credentialsId: SSH_CREDENTIAL_ID, 
                    keyFileVariable: 'SSH_KEY_FILE', 
                    usernameVariable: 'SSH_USER'
                )]) {
                    echo "Deploying stack via direct SSH to ${SWARM_MANAGER_IP}..."

                    // Command to SSH into the Manager, pull the latest image, 
                    // and deploy the stack (forcing Swarm to pick up the new 'latest' tag).
                    sh """
                    ssh -o StrictHostKeyChecking=no \
                        -i ${SSH_KEY_FILE} \
                        ${SSH_USER}@${SWARM_MANAGER_IP} \
                        "docker pull ${DOCKER_IMAGE_REPO}:latest && docker stack deploy -c docker-compose.yml django-stack"
                    """
                }
            }
        }
    }
}
